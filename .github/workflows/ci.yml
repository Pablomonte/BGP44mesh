name: CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  validate:
    name: Validate Configuration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate environment variables
        run: ./tests/validation/test_env_vars.sh

      - name: Install YAML linter
        run: sudo apt-get update && sudo apt-get install -y yamllint

      - name: Lint YAML files
        run: |
          yamllint docker-compose.yml
          find configs/ -name "*.yml" -exec yamllint {} \;

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build BIRD image
        run: docker build ./docker/bird -t bgp-bird:ci

      - name: Build TINC image
        run: docker build ./docker/tinc -t bgp-tinc:ci

      - name: Build Monitoring image
        run: docker build ./docker/monitoring -t bgp-monitoring:ci

  test-go:
    name: Test Go Daemon
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Download dependencies
        working-directory: ./daemon-go
        run: go mod download

      - name: Run go vet
        working-directory: ./daemon-go
        run: go vet ./...

      - name: Run go test
        working-directory: ./daemon-go
        run: go test ./...

      - name: Build daemon
        working-directory: ./daemon-go
        run: go build -o bgp-daemon ./cmd/bgp-daemon

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [build, test-go]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy environment file
        run: cp .env.example .env

      - name: Deploy local environment
        run: make deploy-local

      - name: Wait for convergence
        run: sleep 90

      - name: Run integration tests
        run: make test-integration

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Docker PS ==="
          docker ps -a
          echo "=== BIRD1 Logs ==="
          docker logs bird1 || true
          echo "=== TINC1 Logs ==="
          docker logs tinc1 || true
          echo "=== ETCD1 Logs ==="
          docker logs etcd1 || true

      - name: Cleanup
        if: always()
        run: make clean

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [validate, build, test-go, integration]
    if: always()

    steps:
      - name: Check job results
        run: |
          echo "Validate: ${{ needs.validate.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Test Go: ${{ needs.test-go.result }}"
          echo "Integration: ${{ needs.integration.result }}"

          if [ "${{ needs.validate.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ] || \
             [ "${{ needs.test-go.result }}" != "success" ] || \
             [ "${{ needs.integration.result }}" != "success" ]; then
            echo "❌ CI pipeline failed"
            exit 1
          fi

          echo "✅ All CI checks passed"
